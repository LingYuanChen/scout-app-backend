name: PR Title Formatter

on:
  pull_request_target:
    types:
      - opened
      - edited
      - synchronize
      - reopened
      - labeled
      - unlabeled

jobs:
  # Format title immediately
  format_title:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Format Title
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;

            const formatTitle = (title) => {
              if (title.includes('/')) {
                title = title.split('/').slice(1).join(' ');
              }
              title = title.replace(/^[^\w]*/, '').trim();
              title = title.replace(/[-_]/g, ' ');
              title = title.toLowerCase();
              return title.charAt(0).toUpperCase() + title.slice(1);
            };

            const newTitle = formatTitle(pr.title);

            if (pr.title !== newTitle) {
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                title: newTitle
              });
            }

  # Add emoji after labels
  add_emoji:
    needs: [format_title, labeler]
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read
    steps:
      - name: Add Emoji
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const labels = pr.labels.map(l => l.name);

            const labelEmojis = {
              documentation: ['📚', '📖', '📝'],
              bug: ['🐛', '🪲', '🔍'],
              dependencies: ['📦', '🔧', '⚙️'],
              enhancement: ['✨', '🌟', '💫'],
              github_actions: ['👷', '🤖', '⚡'],
              test: ['🧪', '🔬', '🧮'],
              refactor: ['🔧', '♻️', '🏗️'],
              ci: ['⚙️', '🔄', '🛠️'],
              config: ['⚙️', '🔨', '🛠️']
            };

            let emoji = '';
            for (const label of labels) {
              const labelEmoji = labelEmojis[label.toLowerCase()];
              if (labelEmoji) {
                const randomIndex = Math.floor(Math.random() * labelEmoji.length);
                emoji = labelEmoji[randomIndex] + ' ';
                break;
              }
            }

            if (emoji) {
              const currentTitle = pr.title;
              // Only add emoji if it's not already there
              if (!currentTitle.match(/^[^\w]*/)) {
                const newTitle = `${emoji}${currentTitle}`;
                await github.rest.pulls.update({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  pull_number: pr.number,
                  title: newTitle
                });
              }
            }
