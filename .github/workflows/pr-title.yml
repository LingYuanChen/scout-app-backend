name: PR Title Formatter

on:
  pull_request:
    types: [opened, edited, synchronize, reopened, labeled, unlabeled]

jobs:
  format_pr_title:
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
      contents: read

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Format PR Title
        id: format_title
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PROJECT_ACCESS_TOKEN }}
          script: |
            const pr = context.payload.pull_request;
            const labels = pr.labels.map(l => l.name);

            // Emoji map with arrays for random selection
            const labelEmojis = {
              'enhancement': ['✨', '🌟', '💫'],
              'bug': ['🐛', '🪲', '🔍'],
              'documentation': ['📚', '📖', '📝'],
              'dependencies': ['📦', '🔧', '⚙️'],
              'github_actions': ['👷', '🤖', '⚡'],
              'test': ['🧪', '🔬', '🧮'],
              'refactor': ['🔧', '♻️', '🏗️'],
              'ci': ['⚙️', '🔄', '🛠️'],
              'config': ['⚙️', '🔨', '🛠️'],
              'breaking': ['💥', '🚨', '⚠️'],
              'security': ['🔒', '🛡️', '🔐'],
              'performance': ['⚡️', '🚀', '💨']
            };

            // Get random emoji based on labels
            let emoji = '';
            for (const label of labels) {
              const labelEmoji = labelEmojis[label.toLowerCase()];
              if (labelEmoji) {
                const randomIndex = Math.floor(Math.random() * labelEmoji.length);
                emoji = labelEmoji[randomIndex] + ' ';
                break;
              }
            }

            // Format title with proper capitalization
            const formatTitle = (title) => {
              title = title.replace(/^[^\w]*/, '').trim();
              const words = title.split(' ');

              const formattedWords = words.map((word, index) => {
                if (index === 0 && word.includes(':')) {
                  const [type, ...rest] = word.split(':');
                  return `${type.toLowerCase()}:${rest.join(':')}`;
                }
                return word.charAt(0).toUpperCase() + word.slice(1);
              });

              return formattedWords.join(' ');
            };

            // Create new title with emoji and proper capitalization
            const newTitle = `${emoji}${formatTitle(pr.title)}`;

            // Update if different
            if (pr.title !== newTitle) {
              await github.rest.pulls.update({
                owner: context.repo.owner,
                repo: context.repo.repo,
                pull_number: pr.number,
                title: newTitle
              });
            }

            // Set output for logging
            core.setOutput('formatted-title', newTitle);
